{"ast":null,"code":"import _classCallCheck from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nimport { getDistance, getRangeMax, getRangeValue } from \"../../Utils/NumberUtils\";\nexport var BaseMover = /*#__PURE__*/function () {\n  function BaseMover() {\n    _classCallCheck(this, BaseMover);\n  }\n  _createClass(BaseMover, [{\n    key: \"init\",\n    value: function init(particle) {\n      var _a;\n      var container = particle.container,\n        options = particle.options,\n        spinOptions = options.move.spin;\n      if (spinOptions.enable) {\n        var spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : {\n          x: 50,\n          y: 50\n        };\n        var spinCenter = {\n          x: spinPos.x / 100 * container.canvas.size.width,\n          y: spinPos.y / 100 * container.canvas.size.height\n        };\n        var pos = particle.getPosition();\n        var distance = getDistance(pos, spinCenter);\n        var spinAcceleration = getRangeValue(spinOptions.acceleration);\n        particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n        particle.spin = {\n          center: spinCenter,\n          direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n          angle: particle.velocity.angle,\n          radius: distance,\n          acceleration: particle.retina.spinAcceleration\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed && particle.options.move.enable;\n    }\n  }, {\n    key: \"move\",\n    value: function move(particle, delta) {\n      var _a, _b, _c;\n      var _d, _e;\n      var particleOptions = particle.options,\n        moveOptions = particleOptions.move;\n      if (!moveOptions.enable) {\n        return;\n      }\n      var container = particle.container,\n        slowFactor = getProximitySpeedFactor(particle),\n        baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : _d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio) * container.retina.reduceFactor,\n        moveDrift = (_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : _e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio,\n        maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio,\n        sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1,\n        speedFactor = sizeFactor * slowFactor * (delta.factor || 1),\n        diffFactor = 2,\n        moveSpeed = baseSpeed * speedFactor / diffFactor;\n      applyPath(particle, delta);\n      var gravityOptions = particle.gravity,\n        gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n      if (gravityOptions.enable && moveSpeed) {\n        particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n      }\n      if (moveDrift && moveSpeed) {\n        particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);\n      }\n      var decay = particle.moveDecay;\n      if (decay != 1) {\n        particle.velocity.multTo(decay);\n      }\n      var velocity = particle.velocity.mult(moveSpeed),\n        maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n      if (gravityOptions.enable && maxSpeed > 0 && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n          particle.velocity.y = velocity.y / moveSpeed;\n        }\n      }\n      var zIndexOptions = particle.options.zIndex,\n        zVelocityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.velocityRate);\n      if (moveOptions.spin.enable) {\n        spin(particle, moveSpeed);\n      } else {\n        if (zVelocityFactor != 1) {\n          velocity.multTo(zVelocityFactor);\n        }\n        particle.position.addTo(velocity);\n        if (moveOptions.vibrate) {\n          particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n          particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n        }\n      }\n      applyDistance(particle);\n    }\n  }]);\n  return BaseMover;\n}();","map":{"version":3,"names":["applyDistance","applyPath","getProximitySpeedFactor","spin","getDistance","getRangeMax","getRangeValue","BaseMover","particle","_a","container","options","spinOptions","move","enable","spinPos","position","x","y","spinCenter","canvas","size","width","height","pos","getPosition","distance","spinAcceleration","acceleration","retina","pixelRatio","center","direction","velocity","angle","radius","destroyed","delta","_b","_c","_d","_e","particleOptions","moveOptions","slowFactor","baseSpeed","moveSpeed","speed","reduceFactor","moveDrift","drift","maxSize","value","sizeFactor","getRadius","speedFactor","factor","diffFactor","gravityOptions","gravity","gravityFactor","inverse","decay","moveDecay","multTo","mult","maxSpeed","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","addTo","vibrate","Math","sin","cos"],"sources":["/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/react-tsparticles/node_modules/tsparticles/esm/Movers/Base/BaseMover.js"],"sourcesContent":["import { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nimport { getDistance, getRangeMax, getRangeValue } from \"../../Utils/NumberUtils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 };\n            const spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            };\n            const pos = particle.getPosition();\n            const distance = getDistance(pos, spinCenter);\n            const spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        applyPath(particle, delta);\n        const gravityOptions = particle.gravity, gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n        if (gravityOptions.enable && moveSpeed) {\n            particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n        }\n        if (moveDrift && moveSpeed) {\n            particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n        }\n        const decay = particle.moveDecay;\n        if (decay != 1) {\n            particle.velocity.multTo(decay);\n        }\n        const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n        if (gravityOptions.enable &&\n            maxSpeed > 0 &&\n            ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n            velocity.y = gravityFactor * maxSpeed;\n            if (moveSpeed) {\n                particle.velocity.y = velocity.y / moveSpeed;\n            }\n        }\n        const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}