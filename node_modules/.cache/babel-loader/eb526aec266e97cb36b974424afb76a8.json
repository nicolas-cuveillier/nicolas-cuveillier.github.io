{"ast":null,"code":"import _classCallCheck from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { getRangeValue } from \"../../Utils/NumberUtils\";\nfunction updateWobble(particle, delta) {\n  var _a;\n  var wobble = particle.options.wobble;\n  if (!wobble.enable || !particle.wobble) {\n    return;\n  }\n  var speed = particle.wobble.speed * delta.factor;\n  var distance = ((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor / (1000 / 60);\n  var max = 2 * Math.PI;\n  particle.wobble.angle += speed;\n  if (particle.wobble.angle > max) {\n    particle.wobble.angle -= max;\n  }\n  particle.position.x += distance * Math.cos(particle.wobble.angle);\n  particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport var WobbleUpdater = /*#__PURE__*/function () {\n  function WobbleUpdater(container) {\n    _classCallCheck(this, WobbleUpdater);\n    this.container = container;\n  }\n  _createClass(WobbleUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var wobbleOpt = particle.options.wobble;\n      if (wobbleOpt.enable) {\n        particle.wobble = {\n          angle: Math.random() * Math.PI * 2,\n          speed: getRangeValue(wobbleOpt.speed) / 360\n        };\n      } else {\n        particle.wobble = {\n          angle: 0,\n          speed: 0\n        };\n      }\n      particle.retina.wobbleDistance = getRangeValue(wobbleOpt.distance) * this.container.retina.pixelRatio;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed && !particle.spawning && particle.options.wobble.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n      updateWobble(particle, delta);\n    }\n  }]);\n  return WobbleUpdater;\n}();","map":{"version":3,"names":["getRangeValue","updateWobble","particle","delta","_a","wobble","options","enable","speed","factor","distance","retina","wobbleDistance","max","Math","PI","angle","position","x","cos","y","abs","sin","WobbleUpdater","container","wobbleOpt","random","pixelRatio","destroyed","spawning","isEnabled"],"sources":["/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/react-tsparticles/node_modules/tsparticles/esm/Updaters/Wobble/WobbleUpdater.js"],"sourcesContent":["import { getRangeValue } from \"../../Utils/NumberUtils\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!wobble.enable || !particle.wobble) {\n        return;\n    }\n    const speed = particle.wobble.speed * delta.factor;\n    const distance = (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor) / (1000 / 60);\n    const max = 2 * Math.PI;\n    particle.wobble.angle += speed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt.enable) {\n            particle.wobble = {\n                angle: Math.random() * Math.PI * 2,\n                speed: getRangeValue(wobbleOpt.speed) / 360,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                speed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue(wobbleOpt.distance) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && particle.options.wobble.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SAASC,YAAY,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACnC,IAAIC,EAAE;EACN,IAAMC,MAAM,GAAGH,QAAQ,CAACI,OAAO,CAACD,MAAM;EACtC,IAAI,CAACA,MAAM,CAACE,MAAM,IAAI,CAACL,QAAQ,CAACG,MAAM,EAAE;IACpC;EACJ;EACA,IAAMG,KAAK,GAAGN,QAAQ,CAACG,MAAM,CAACG,KAAK,GAAGL,KAAK,CAACM,MAAM;EAClD,IAAMC,QAAQ,GAAI,CAAC,CAACN,EAAE,GAAGF,QAAQ,CAACS,MAAM,CAACC,cAAc,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,IAAID,KAAK,CAACM,MAAM,IAAK,IAAI,GAAG,EAAE,CAAC;EAC1H,IAAMI,GAAG,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE;EACvBb,QAAQ,CAACG,MAAM,CAACW,KAAK,IAAIR,KAAK;EAC9B,IAAIN,QAAQ,CAACG,MAAM,CAACW,KAAK,GAAGH,GAAG,EAAE;IAC7BX,QAAQ,CAACG,MAAM,CAACW,KAAK,IAAIH,GAAG;EAChC;EACAX,QAAQ,CAACe,QAAQ,CAACC,CAAC,IAAIR,QAAQ,GAAGI,IAAI,CAACK,GAAG,CAACjB,QAAQ,CAACG,MAAM,CAACW,KAAK,CAAC;EACjEd,QAAQ,CAACe,QAAQ,CAACG,CAAC,IAAIV,QAAQ,GAAGI,IAAI,CAACO,GAAG,CAACP,IAAI,CAACQ,GAAG,CAACpB,QAAQ,CAACG,MAAM,CAACW,KAAK,CAAC,CAAC;AAC/E;AACA,WAAaO,aAAa;EACtB,uBAAYC,SAAS,EAAE;IAAA;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EAAC;IAAA;IAAA,OACD,cAAKtB,QAAQ,EAAE;MACX,IAAMuB,SAAS,GAAGvB,QAAQ,CAACI,OAAO,CAACD,MAAM;MACzC,IAAIoB,SAAS,CAAClB,MAAM,EAAE;QAClBL,QAAQ,CAACG,MAAM,GAAG;UACdW,KAAK,EAAEF,IAAI,CAACY,MAAM,EAAE,GAAGZ,IAAI,CAACC,EAAE,GAAG,CAAC;UAClCP,KAAK,EAAER,aAAa,CAACyB,SAAS,CAACjB,KAAK,CAAC,GAAG;QAC5C,CAAC;MACL,CAAC,MACI;QACDN,QAAQ,CAACG,MAAM,GAAG;UACdW,KAAK,EAAE,CAAC;UACRR,KAAK,EAAE;QACX,CAAC;MACL;MACAN,QAAQ,CAACS,MAAM,CAACC,cAAc,GAAGZ,aAAa,CAACyB,SAAS,CAACf,QAAQ,CAAC,GAAG,IAAI,CAACc,SAAS,CAACb,MAAM,CAACgB,UAAU;IACzG;EAAC;IAAA;IAAA,OACD,mBAAUzB,QAAQ,EAAE;MAChB,OAAO,CAACA,QAAQ,CAAC0B,SAAS,IAAI,CAAC1B,QAAQ,CAAC2B,QAAQ,IAAI3B,QAAQ,CAACI,OAAO,CAACD,MAAM,CAACE,MAAM;IACtF;EAAC;IAAA;IAAA,OACD,gBAAOL,QAAQ,EAAEC,KAAK,EAAE;MACpB,IAAI,CAAC,IAAI,CAAC2B,SAAS,CAAC5B,QAAQ,CAAC,EAAE;QAC3B;MACJ;MACAD,YAAY,CAACC,QAAQ,EAAEC,KAAK,CAAC;IACjC;EAAC;EAAA;AAAA"},"metadata":{},"sourceType":"module"}