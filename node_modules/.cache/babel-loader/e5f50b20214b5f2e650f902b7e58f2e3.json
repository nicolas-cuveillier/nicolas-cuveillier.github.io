{"ast":null,"code":"import _slicedToArray from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particle_engine;\nimport { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue } from \"../Utils/NumberUtils\";\nimport { colorToRgb, getHslFromAnimation } from \"../Utils/ColorUtils\";\nimport { deepExtend, isInArray, itemFromArray } from \"../Utils/Utils\";\nimport { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nimport { Shape } from \"../Options/Classes/Particles/Shape/Shape\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nvar fixOutMode = function fixOutMode(data) {\n  if (!(isInArray(data.outMode, data.checkModes) || isInArray(data.outMode, data.checkModes))) {\n    return;\n  }\n  if (data.coord > data.maxCoord - data.radius * 2) {\n    data.setCb(-data.radius);\n  } else if (data.coord < data.radius * 2) {\n    data.setCb(data.radius);\n  }\n};\nexport var Particle = /*#__PURE__*/function () {\n  function Particle(engine, id, container, position, overrideOptions, group) {\n    _classCallCheck(this, Particle);\n    var _a, _b, _c, _d, _e, _f, _g;\n    this.id = id;\n    this.container = container;\n    this.group = group;\n    _Particle_engine.set(this, void 0);\n    __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n    this.fill = true;\n    this.close = true;\n    this.lastPathTime = 0;\n    this.destroyed = false;\n    this.unbreakable = false;\n    this.splitCount = 0;\n    this.misplaced = false;\n    this.retina = {\n      maxDistance: {}\n    };\n    this.ignoresResizeRatio = true;\n    var pxRatio = container.retina.pixelRatio,\n      mainOptions = container.actualOptions,\n      particlesOptions = new ParticlesOptions();\n    particlesOptions.load(mainOptions.particles);\n    var shapeType = particlesOptions.shape.type,\n      reduceDuplicates = particlesOptions.reduceDuplicates;\n    this.shape = shapeType instanceof Array ? itemFromArray(shapeType, this.id, reduceDuplicates) : shapeType;\n    if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n      if (overrideOptions.shape.type) {\n        var overrideShapeType = overrideOptions.shape.type;\n        this.shape = overrideShapeType instanceof Array ? itemFromArray(overrideShapeType, this.id, reduceDuplicates) : overrideShapeType;\n      }\n      var shapeOptions = new Shape();\n      shapeOptions.load(overrideOptions.shape);\n      if (this.shape) {\n        this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n      }\n    } else {\n      this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n    }\n    if (overrideOptions !== undefined) {\n      particlesOptions.load(overrideOptions);\n    }\n    if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n      particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n    }\n    this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n    this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n    this.options = particlesOptions;\n    this.pathDelay = getValue(this.options.move.path.delay) * 1000;\n    var zIndexValue = getRangeValue(this.options.zIndex.value);\n    container.retina.initParticle(this);\n    var sizeOptions = this.options.size,\n      sizeRange = sizeOptions.value;\n    this.size = {\n      enable: sizeOptions.animation.enable,\n      value: getValue(sizeOptions) * container.retina.pixelRatio,\n      max: getRangeMax(sizeRange) * pxRatio,\n      min: getRangeMin(sizeRange) * pxRatio,\n      loops: 0,\n      maxLoops: getRangeValue(sizeOptions.animation.count)\n    };\n    var sizeAnimation = sizeOptions.animation;\n    if (sizeAnimation.enable) {\n      this.size.status = 0;\n      switch (sizeAnimation.startValue) {\n        case \"min\":\n          this.size.value = this.size.min;\n          this.size.status = 0;\n          break;\n        case \"random\":\n          this.size.value = randomInRange(this.size) * pxRatio;\n          this.size.status = Math.random() >= 0.5 ? 0 : 1;\n          break;\n        case \"max\":\n        default:\n          this.size.value = this.size.max;\n          this.size.status = 1;\n          break;\n      }\n      this.size.velocity = ((_g = this.retina.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n      if (!sizeAnimation.sync) {\n        this.size.velocity *= Math.random();\n      }\n    }\n    this.direction = getParticleDirectionAngle(this.options.move.direction);\n    this.bubble = {\n      inRange: false\n    };\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = this.initialVelocity.copy();\n    this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n    var gravityOptions = this.options.move.gravity;\n    this.gravity = {\n      enable: gravityOptions.enable,\n      acceleration: getRangeValue(gravityOptions.acceleration),\n      inverse: gravityOptions.inverse\n    };\n    this.position = this.calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n    this.initialPosition = this.position.copy();\n    this.offset = Vector.origin;\n    var particles = container.particles;\n    particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n    particles.lastZIndex = this.position.z;\n    this.zIndexFactor = this.position.z / container.zLayers;\n    this.sides = 24;\n    var drawer = container.drawers.get(this.shape);\n    if (!drawer) {\n      drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n    if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n      drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n    }\n    var sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n    if (sideCountFunc) {\n      this.sides = sideCountFunc(this);\n    }\n    this.life = this.loadLife();\n    this.spawning = this.life.delay > 0;\n    this.shadowColor = colorToRgb(this.options.shadow.color);\n    var _iterator = _createForOfIteratorHelper(container.particles.updaters),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var updater = _step.value;\n        if (updater.init) {\n          updater.init(this);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (drawer && drawer.particleInit) {\n      drawer.particleInit(container, this);\n    }\n    var _iterator2 = _createForOfIteratorHelper(container.plugins),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _step2$value = _slicedToArray(_step2.value, 2),\n          plugin = _step2$value[1];\n        if (plugin.particleCreated) {\n          plugin.particleCreated(this);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  _createClass(Particle, [{\n    key: \"isVisible\",\n    value: function isVisible() {\n      return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n  }, {\n    key: \"isInsideCanvas\",\n    value: function isInsideCanvas() {\n      var radius = this.getRadius(),\n        canvasSize = this.container.canvas.size;\n      return this.position.x >= -radius && this.position.y >= -radius && this.position.y <= canvasSize.height + radius && this.position.x <= canvasSize.width + radius;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(delta) {\n      var container = this.container;\n      var _iterator3 = _createForOfIteratorHelper(container.plugins),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n            plugin = _step3$value[1];\n          container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      container.canvas.drawParticle(this, delta);\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return {\n        x: this.position.x + this.offset.x,\n        y: this.position.y + this.offset.y,\n        z: this.position.z\n      };\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      var _a;\n      return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n  }, {\n    key: \"getMass\",\n    value: function getMass() {\n      return Math.pow(this.getRadius(), 2) * Math.PI / 2;\n    }\n  }, {\n    key: \"getFillColor\",\n    value: function getFillColor() {\n      var _a, _b;\n      var color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n      if (color && this.roll && (this.backColor || this.roll.alter)) {\n        var backFactor = this.options.roll.mode === \"both\" ? 2 : 1,\n          backSum = this.options.roll.mode === \"horizontal\" ? Math.PI / 2 : 0,\n          rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n        if (rolled) {\n          if (this.backColor) {\n            return this.backColor;\n          }\n          if (this.roll.alter) {\n            return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n          }\n        }\n      }\n      return color;\n    }\n  }, {\n    key: \"getStrokeColor\",\n    value: function getStrokeColor() {\n      var _a, _b;\n      return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(override) {\n      this.destroyed = true;\n      this.bubble.inRange = false;\n      if (this.unbreakable) {\n        return;\n      }\n      this.destroyed = true;\n      this.bubble.inRange = false;\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            plugin = _step4$value[1];\n          if (plugin.particleDestroyed) {\n            plugin.particleDestroyed(this, override);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (override) {\n        return;\n      }\n      var destroyOptions = this.options.destroy;\n      if (destroyOptions.mode === \"split\") {\n        this.split();\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.opacity) {\n        this.opacity.loops = 0;\n      }\n      this.size.loops = 0;\n    }\n  }, {\n    key: \"split\",\n    value: function split() {\n      var splitOptions = this.options.destroy.split;\n      if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n        return;\n      }\n      var rate = getRangeValue(splitOptions.rate.value);\n      for (var i = 0; i < rate; i++) {\n        this.container.particles.addSplitParticle(this);\n      }\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition(container, position, zIndex) {\n      var tryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var _a, _b, _c, _d;\n      var _iterator5 = _createForOfIteratorHelper(container.plugins),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n            plugin = _step5$value[1];\n          var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n          if (pluginPos !== undefined) {\n            return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var canvasSize = container.canvas.size,\n        exactPosition = calcExactPositionOrRandomFromSize({\n          size: canvasSize,\n          position: position\n        }),\n        pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex),\n        radius = this.getRadius(),\n        outModes = this.options.move.outModes,\n        fixHorizontal = function fixHorizontal(outMode) {\n          fixOutMode({\n            outMode: outMode,\n            checkModes: [\"bounce\", \"bounce-horizontal\"],\n            coord: pos.x,\n            maxCoord: container.canvas.size.width,\n            setCb: function setCb(value) {\n              return pos.x += value;\n            },\n            radius: radius\n          });\n        },\n        fixVertical = function fixVertical(outMode) {\n          fixOutMode({\n            outMode: outMode,\n            checkModes: [\"bounce\", \"bounce-vertical\"],\n            coord: pos.y,\n            maxCoord: container.canvas.size.height,\n            setCb: function setCb(value) {\n              return pos.y += value;\n            },\n            radius: radius\n          });\n        };\n      fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n      fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n      fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n      fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n      if (this.checkOverlap(pos, tryCount)) {\n        return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n      }\n      return pos;\n    }\n  }, {\n    key: \"checkOverlap\",\n    value: function checkOverlap(pos) {\n      var tryCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var collisionsOptions = this.options.collisions,\n        radius = this.getRadius();\n      if (!collisionsOptions.enable) {\n        return false;\n      }\n      var overlapOptions = collisionsOptions.overlap;\n      if (overlapOptions.enable) {\n        return false;\n      }\n      var retries = overlapOptions.retries;\n      if (retries >= 0 && tryCount > retries) {\n        throw new Error(\"Particle is overlapping and can't be placed\");\n      }\n      var overlaps = false;\n      var _iterator6 = _createForOfIteratorHelper(this.container.particles.array),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var particle = _step6.value;\n          if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n            overlaps = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return overlaps;\n    }\n  }, {\n    key: \"calculateVelocity\",\n    value: function calculateVelocity() {\n      var baseVelocity = getParticleBaseVelocity(this.direction),\n        res = baseVelocity.copy(),\n        moveOptions = this.options.move,\n        rad = Math.PI / 180 * getRangeValue(moveOptions.angle.value),\n        radOffset = Math.PI / 180 * getRangeValue(moveOptions.angle.offset),\n        range = {\n          left: radOffset - rad / 2,\n          right: radOffset + rad / 2\n        };\n      if (!moveOptions.straight) {\n        res.angle += randomInRange(setRangeValue(range.left, range.right));\n      }\n      if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n        res.length *= Math.random();\n      }\n      return res;\n    }\n  }, {\n    key: \"loadShapeData\",\n    value: function loadShapeData(shapeOptions, reduceDuplicates) {\n      var shapeData = shapeOptions.options[this.shape];\n      if (shapeData) {\n        return deepExtend({}, shapeData instanceof Array ? itemFromArray(shapeData, this.id, reduceDuplicates) : shapeData);\n      }\n    }\n  }, {\n    key: \"loadLife\",\n    value: function loadLife() {\n      var container = this.container,\n        particlesOptions = this.options,\n        lifeOptions = particlesOptions.life,\n        life = {\n          delay: container.retina.reduceFactor ? getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : Math.random()) / container.retina.reduceFactor * 1000 : 0,\n          delayTime: 0,\n          duration: container.retina.reduceFactor ? getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : Math.random()) / container.retina.reduceFactor * 1000 : 0,\n          time: 0,\n          count: particlesOptions.life.count\n        };\n      if (life.duration <= 0) {\n        life.duration = -1;\n      }\n      if (life.count <= 0) {\n        life.count = -1;\n      }\n      return life;\n    }\n  }]);\n  return Particle;\n}();\n_Particle_engine = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particle_engine","calcExactPositionOrRandomFromSize","clamp","getDistance","getParticleBaseVelocity","getParticleDirectionAngle","getRangeMax","getRangeMin","getRangeValue","getValue","randomInRange","setRangeValue","colorToRgb","getHslFromAnimation","deepExtend","isInArray","itemFromArray","ParticlesOptions","Shape","Vector","Vector3d","alterHsl","fixOutMode","data","outMode","checkModes","coord","maxCoord","radius","setCb","Particle","engine","id","container","position","overrideOptions","group","_a","_b","_c","_d","_e","_f","_g","fill","close","lastPathTime","destroyed","unbreakable","splitCount","misplaced","retina","maxDistance","ignoresResizeRatio","pxRatio","pixelRatio","mainOptions","actualOptions","particlesOptions","load","particles","shapeType","shape","type","reduceDuplicates","Array","overrideShapeType","shapeOptions","shapeData","loadShapeData","undefined","options","pathDelay","move","path","delay","zIndexValue","zIndex","initParticle","sizeOptions","size","sizeRange","enable","animation","max","min","loops","maxLoops","count","sizeAnimation","status","startValue","Math","random","velocity","sizeAnimationSpeed","reduceFactor","sync","direction","bubble","inRange","initialVelocity","calculateVelocity","copy","moveDecay","decay","gravityOptions","gravity","acceleration","inverse","calcPosition","zLayers","initialPosition","offset","origin","needsSort","lastZIndex","z","zIndexFactor","sides","drawer","drawers","plugins","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","life","loadLife","spawning","shadowColor","shadow","color","updaters","updater","init","particleInit","plugin","particleCreated","isInsideCanvas","getRadius","canvasSize","canvas","x","y","height","width","delta","drawParticlePlugin","drawParticle","PI","roll","backColor","alter","backFactor","mode","backSum","rolled","floor","angle","strokeColor","getFillColor","override","particleDestroyed","destroyOptions","destroy","split","opacity","splitOptions","rate","i","addSplitParticle","tryCount","pluginPos","particlePosition","create","exactPosition","pos","outModes","fixHorizontal","fixVertical","left","default","right","top","bottom","checkOverlap","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","overlaps","array","particle","baseVelocity","res","moveOptions","rad","radOffset","range","straight","speed","length","lifeOptions","delayTime","duration","time","WeakMap"],"sources":["/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/react-tsparticles/node_modules/tsparticles/esm/Core/Particle.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particle_engine;\nimport { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { colorToRgb, getHslFromAnimation } from \"../Utils/ColorUtils\";\nimport { deepExtend, isInArray, itemFromArray } from \"../Utils/Utils\";\nimport { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nimport { Shape } from \"../Options/Classes/Particles/Shape/Shape\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nconst fixOutMode = (data) => {\n    if (!(isInArray(data.outMode, data.checkModes) || isInArray(data.outMode, data.checkModes))) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.id = id;\n        this.container = container;\n        this.group = group;\n        _Particle_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.splitCount = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = new ParticlesOptions();\n        particlesOptions.load(mainOptions.particles);\n        const shapeType = particlesOptions.shape.type, reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = shapeType instanceof Array ? itemFromArray(shapeType, this.id, reduceDuplicates) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array\n                        ? itemFromArray(overrideShapeType, this.id, reduceDuplicates)\n                        : overrideShapeType;\n            }\n            const shapeOptions = new Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n            }\n        }\n        else {\n            this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.options = particlesOptions;\n        this.pathDelay = getValue(this.options.move.path.delay) * 1000;\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getValue(sizeOptions) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        const sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size) * pxRatio;\n                    this.size.status = Math.random() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n            this.size.velocity =\n                (((_g = this.retina.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        this.direction = getParticleDirectionAngle(this.options.move.direction);\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const gravityOptions = this.options.move.gravity;\n        this.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this.position = this.calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.life = this.loadLife();\n        this.spawning = this.life.delay > 0;\n        this.shadowColor = colorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            if (updater.init) {\n                updater.init(this);\n            }\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleCreated) {\n                plugin.particleCreated(this);\n            }\n        }\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.options.roll.mode === \"both\" ? 2 : 1, backSum = this.options.roll.mode === \"horizontal\" ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    destroy(override) {\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        if (this.unbreakable) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        if (override) {\n            return;\n        }\n        const destroyOptions = this.options.destroy;\n        if (destroyOptions.mode === \"split\") {\n            this.split();\n        }\n    }\n    reset() {\n        if (this.opacity) {\n            this.opacity.loops = 0;\n        }\n        this.size.loops = 0;\n    }\n    split() {\n        const splitOptions = this.options.destroy.split;\n        if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n            return;\n        }\n        const rate = getRangeValue(splitOptions.rate.value);\n        for (let i = 0; i < rate; i++) {\n            this.container.particles.addSplitParticle(this);\n        }\n    }\n    calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this.checkOverlap(pos, tryCount)) {\n            return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move, rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= Math.random();\n        }\n        return res;\n    }\n    loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, shapeData instanceof Array ? itemFromArray(shapeData, this.id, reduceDuplicates) : shapeData);\n        }\n    }\n    loadLife() {\n        const container = this.container, particlesOptions = this.options, lifeOptions = particlesOptions.life, life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : Math.random())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : Math.random())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: particlesOptions.life.count,\n        };\n        if (life.duration <= 0) {\n            life.duration = -1;\n        }\n        if (life.count <= 0) {\n            life.count = -1;\n        }\n        return life;\n    }\n}\n_Particle_engine = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}