{"ast":null,"code":"import _classCallCheck from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var Vector = /*#__PURE__*/function () {\n  function Vector(xOrCoords, y) {\n    _classCallCheck(this, Vector);\n    if (typeof xOrCoords !== \"number\" && xOrCoords) {\n      this.x = xOrCoords.x;\n      this.y = xOrCoords.y;\n    } else if (xOrCoords !== undefined && y !== undefined) {\n      this.x = xOrCoords;\n      this.y = y;\n    } else {\n      throw new Error(\"tsParticles - Vector not initialized correctly\");\n    }\n  }\n  _createClass(Vector, [{\n    key: \"angle\",\n    get: function get() {\n      return Math.atan2(this.y, this.x);\n    },\n    set: function set(angle) {\n      this.updateFromAngle(angle, this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return Math.sqrt(this.getLengthSq());\n    },\n    set: function set(length) {\n      this.updateFromAngle(this.angle, length);\n    }\n  }, {\n    key: \"add\",\n    value: function add(v) {\n      return Vector.create(this.x + v.x, this.y + v.y);\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(v) {\n      this.x += v.x;\n      this.y += v.y;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      return Vector.create(this.x - v.x, this.y - v.y);\n    }\n  }, {\n    key: \"subFrom\",\n    value: function subFrom(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n    }\n  }, {\n    key: \"mult\",\n    value: function mult(n) {\n      return Vector.create(this.x * n, this.y * n);\n    }\n  }, {\n    key: \"multTo\",\n    value: function multTo(n) {\n      this.x *= n;\n      this.y *= n;\n    }\n  }, {\n    key: \"div\",\n    value: function div(n) {\n      return Vector.create(this.x / n, this.y / n);\n    }\n  }, {\n    key: \"divTo\",\n    value: function divTo(n) {\n      this.x /= n;\n      this.y /= n;\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return this.sub(v).length;\n    }\n  }, {\n    key: \"getLengthSq\",\n    value: function getLengthSq() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n  }, {\n    key: \"distanceToSq\",\n    value: function distanceToSq(v) {\n      return this.sub(v).getLengthSq();\n    }\n  }, {\n    key: \"manhattanDistanceTo\",\n    value: function manhattanDistanceTo(v) {\n      return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Vector.clone(this);\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(v) {\n      this.x = v.x;\n      this.y = v.y;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n  }, {\n    key: \"updateFromAngle\",\n    value: function updateFromAngle(angle, length) {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    }\n  }], [{\n    key: \"clone\",\n    value: function clone(source) {\n      return Vector.create(source.x, source.y);\n    }\n  }, {\n    key: \"create\",\n    value: function create(x, y) {\n      return new Vector(x, y);\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      return Vector.create(0, 0);\n    }\n  }]);\n  return Vector;\n}();","map":{"version":3,"names":["Vector","xOrCoords","y","x","undefined","Error","Math","atan2","angle","updateFromAngle","length","sqrt","getLengthSq","v","create","n","sub","abs","clone","cos","sin","source"],"sources":["/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/react-tsparticles/node_modules/tsparticles/esm/Core/Utils/Vector.js"],"sourcesContent":["export class Vector {\n    constructor(xOrCoords, y) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector not initialized correctly\");\n        }\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(v) {\n        this.x = v.x;\n        this.y = v.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}