{"ast":null,"code":"import _asyncToGenerator from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ImageDrawer_images;\nimport { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport var ImageDrawer = /*#__PURE__*/function () {\n  function ImageDrawer() {\n    _classCallCheck(this, ImageDrawer);\n    _ImageDrawer_images.set(this, void 0);\n    __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n  }\n  _createClass(ImageDrawer, [{\n    key: \"getSidesCount\",\n    value: function getSidesCount() {\n      return 12;\n    }\n  }, {\n    key: \"getImages\",\n    value: function getImages(container) {\n      var containerImages = __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").find(function (t) {\n        return t.id === container.id;\n      });\n      if (!containerImages) {\n        __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").push({\n          id: container.id,\n          images: []\n        });\n        return this.getImages(container);\n      } else {\n        return containerImages;\n      }\n    }\n  }, {\n    key: \"addImage\",\n    value: function addImage(container, image) {\n      var containerImages = this.getImages(container);\n      containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context, particle, radius, opacity) {\n      var _a, _b;\n      var image = particle.image;\n      var element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n      if (!element) {\n        return;\n      }\n      var ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n      var pos = {\n        x: -radius,\n        y: -radius\n      };\n      if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(element, pos.x, pos.y, radius * 2, radius * 2 / ratio);\n      if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n        context.globalAlpha = 1;\n      }\n    }\n  }, {\n    key: \"loadShape\",\n    value: function loadShape(particle) {\n      var _this = this;\n      var _a, _b, _c;\n      if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n        return;\n      }\n      var images = this.getImages(particle.container).images;\n      var imageData = particle.shapeData;\n      var image = images.find(function (t) {\n        return t.source === imageData.src;\n      });\n      var imageRes;\n      if (!image) {\n        this.loadImageShape(particle.container, imageData).then(function () {\n          _this.loadShape(particle);\n        });\n        return;\n      }\n      if (image.error) {\n        return;\n      }\n      var color = particle.getFillColor();\n      if (image.svgData && imageData.replaceColor && color) {\n        imageRes = replaceImageColor(image, imageData, color, particle);\n      } else {\n        imageRes = {\n          data: image,\n          loaded: true,\n          ratio: imageData.width / imageData.height,\n          replaceColor: (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color,\n          source: imageData.src\n        };\n      }\n      if (!imageRes.ratio) {\n        imageRes.ratio = 1;\n      }\n      var fill = (_b = imageData.fill) !== null && _b !== void 0 ? _b : particle.fill;\n      var close = (_c = imageData.close) !== null && _c !== void 0 ? _c : particle.close;\n      var imageShape = {\n        image: imageRes,\n        fill: fill,\n        close: close\n      };\n      particle.image = imageShape.image;\n      particle.fill = imageShape.fill;\n      particle.close = imageShape.close;\n    }\n  }, {\n    key: \"loadImageShape\",\n    value: function () {\n      var _loadImageShape = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(container, imageShape) {\n        var source, image, imageFunc;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                source = imageShape.src;\n                if (source) {\n                  _context.next = 3;\n                  break;\n                }\n                throw new Error(\"Error tsParticles - No image.src\");\n              case 3:\n                _context.prev = 3;\n                image = {\n                  source: source,\n                  type: source.substr(source.length - 3),\n                  error: false,\n                  loading: true\n                };\n                this.addImage(container, image);\n                imageFunc = imageShape.replaceColor ? downloadSvgImage : loadImage;\n                _context.next = 9;\n                return imageFunc(image);\n              case 9:\n                _context.next = 14;\n                break;\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](3);\n                throw new Error(\"tsParticles error - \".concat(imageShape.src, \" not found\"));\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 11]]);\n      }));\n      function loadImageShape(_x, _x2) {\n        return _loadImageShape.apply(this, arguments);\n      }\n      return loadImageShape;\n    }()\n  }]);\n  return ImageDrawer;\n}();\n_ImageDrawer_images = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_ImageDrawer_images","downloadSvgImage","loadImage","replaceImageColor","ImageDrawer","container","containerImages","find","t","id","push","images","getImages","image","context","particle","radius","opacity","_a","_b","element","data","ratio","pos","x","y","svgData","replaceColor","globalAlpha","drawImage","_c","shape","imageData","shapeData","source","src","imageRes","loadImageShape","then","loadShape","error","color","getFillColor","loaded","width","height","replace_color","fill","close","imageShape","Error","type","substr","length","loading","addImage","imageFunc","WeakMap"],"sources":["/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/react-tsparticles/node_modules/tsparticles/esm/Shapes/Image/ImageDrawer.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ImageDrawer_images;\nimport { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor() {\n        _ImageDrawer_images.set(this, void 0);\n        __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n    }\n    getSidesCount() {\n        return 12;\n    }\n    getImages(container) {\n        const containerImages = __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").find((t) => t.id === container.id);\n        if (!containerImages) {\n            __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages;\n        }\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    destroy() {\n        __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b;\n        const image = particle.image;\n        const element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n        const pos = {\n            x: -radius,\n            y: -radius,\n        };\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = opacity;\n        }\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = 1;\n        }\n    }\n    loadShape(particle) {\n        var _a, _b, _c;\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const images = this.getImages(particle.container).images;\n        const imageData = particle.shapeData;\n        const image = images.find((t) => t.source === imageData.src);\n        let imageRes;\n        if (!image) {\n            this.loadImageShape(particle.container, imageData).then(() => {\n                this.loadShape(particle);\n            });\n            return;\n        }\n        if (image.error) {\n            return;\n        }\n        const color = particle.getFillColor();\n        if (image.svgData && imageData.replaceColor && color) {\n            imageRes = replaceImageColor(image, imageData, color, particle);\n        }\n        else {\n            imageRes = {\n                data: image,\n                loaded: true,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color,\n                source: imageData.src,\n            };\n        }\n        if (!imageRes.ratio) {\n            imageRes.ratio = 1;\n        }\n        const fill = (_b = imageData.fill) !== null && _b !== void 0 ? _b : particle.fill;\n        const close = (_c = imageData.close) !== null && _c !== void 0 ? _c : particle.close;\n        const imageShape = {\n            image: imageRes,\n            fill,\n            close,\n        };\n        particle.image = imageShape.image;\n        particle.fill = imageShape.fill;\n        particle.close = imageShape.close;\n    }\n    async loadImageShape(container, imageShape) {\n        const source = imageShape.src;\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        try {\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n                error: false,\n                loading: true,\n            };\n            this.addImage(container, image);\n            const imageFunc = imageShape.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch (_a) {\n            throw new Error(`tsParticles error - ${imageShape.src} not found`);\n        }\n    }\n}\n_ImageDrawer_images = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}