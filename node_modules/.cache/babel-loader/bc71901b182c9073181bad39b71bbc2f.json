{"ast":null,"code":"import { CurvesPathGen } from \"./Curves\";\nimport { Vector } from \"tsparticles-engine\";\nimport { getRandom } from \"tsparticles-engine\";\nexport class CurvesPathGenerator {\n  constructor() {\n    this.options = {\n      rndFunc: null,\n      period: 100,\n      nbHarmonics: 2,\n      attenHarmonics: 0.8,\n      lowValue: -0.03,\n      highValue: 0.03\n    };\n  }\n  generate(p) {\n    if (p.pathGen === undefined) {\n      const options = this.options;\n      p.pathGen = CurvesPathGen(options.rndFunc, options.period, options.nbHarmonics, options.attenHarmonics, options.lowValue, options.highValue);\n    }\n    if (p.curveVelocity === undefined) {\n      p.curveVelocity = Vector.origin;\n      p.curveVelocity.length = getRandom() * 0.6 + 0.8;\n      p.curveVelocity.angle = getRandom() * Math.PI * 2;\n    } else {\n      p.curveVelocity.length += 0.01;\n      p.curveVelocity.angle = (p.curveVelocity.angle + p.pathGen()) % (Math.PI * 2);\n    }\n    p.velocity.x = 0;\n    p.velocity.y = 0;\n    return p.curveVelocity;\n  }\n  init(container) {\n    var _a, _b, _c, _d, _e;\n    const sourceOptions = container.actualOptions.particles.move.path.options;\n    if (typeof sourceOptions.rndFunc === \"function\") {\n      this.options.rndFunc = sourceOptions.rndFunc;\n    } else if (typeof sourceOptions.rndFunc === \"string\") {\n      this.options.rndFunc = window[sourceOptions.rndFunc] || this.options.rndFunc;\n    }\n    this.options.period = (_a = sourceOptions.period) !== null && _a !== void 0 ? _a : this.options.period;\n    this.options.nbHarmonics = (_b = sourceOptions.nbHarmonics) !== null && _b !== void 0 ? _b : this.options.nbHarmonics;\n    this.options.attenHarmonics = (_c = sourceOptions.attenHarmonics) !== null && _c !== void 0 ? _c : this.options.attenHarmonics;\n    this.options.lowValue = (_d = sourceOptions.lowValue) !== null && _d !== void 0 ? _d : this.options.lowValue;\n    this.options.highValue = (_e = sourceOptions.highValue) !== null && _e !== void 0 ? _e : this.options.highValue;\n  }\n  reset(particle) {\n    delete particle.pathGen;\n    delete particle.curveVelocity;\n  }\n  update() {}\n}","map":{"version":3,"names":["CurvesPathGen","Vector","getRandom","CurvesPathGenerator","constructor","options","rndFunc","period","nbHarmonics","attenHarmonics","lowValue","highValue","generate","p","pathGen","undefined","curveVelocity","origin","length","angle","Math","PI","velocity","x","y","init","container","_a","_b","_c","_d","_e","sourceOptions","actualOptions","particles","move","path","window","reset","particle","update"],"sources":["/Users/nicolascuveillier/WebSite/portfolio/node_modules/tsparticles-path-curves/esm/CurvesPathGenerator.js"],"sourcesContent":["import { CurvesPathGen } from \"./Curves\";\nimport { Vector } from \"tsparticles-engine\";\nimport { getRandom } from \"tsparticles-engine\";\nexport class CurvesPathGenerator {\n    constructor() {\n        this.options = {\n            rndFunc: null,\n            period: 100,\n            nbHarmonics: 2,\n            attenHarmonics: 0.8,\n            lowValue: -0.03,\n            highValue: 0.03,\n        };\n    }\n    generate(p) {\n        if (p.pathGen === undefined) {\n            const options = this.options;\n            p.pathGen = CurvesPathGen(options.rndFunc, options.period, options.nbHarmonics, options.attenHarmonics, options.lowValue, options.highValue);\n        }\n        if (p.curveVelocity === undefined) {\n            p.curveVelocity = Vector.origin;\n            p.curveVelocity.length = getRandom() * 0.6 + 0.8;\n            p.curveVelocity.angle = getRandom() * Math.PI * 2;\n        }\n        else {\n            p.curveVelocity.length += 0.01;\n            p.curveVelocity.angle = (p.curveVelocity.angle + p.pathGen()) % (Math.PI * 2);\n        }\n        p.velocity.x = 0;\n        p.velocity.y = 0;\n        return p.curveVelocity;\n    }\n    init(container) {\n        var _a, _b, _c, _d, _e;\n        const sourceOptions = container.actualOptions.particles.move.path.options;\n        if (typeof sourceOptions.rndFunc === \"function\") {\n            this.options.rndFunc = sourceOptions.rndFunc;\n        }\n        else if (typeof sourceOptions.rndFunc === \"string\") {\n            this.options.rndFunc =\n                window[sourceOptions.rndFunc] || this.options.rndFunc;\n        }\n        this.options.period = (_a = sourceOptions.period) !== null && _a !== void 0 ? _a : this.options.period;\n        this.options.nbHarmonics = (_b = sourceOptions.nbHarmonics) !== null && _b !== void 0 ? _b : this.options.nbHarmonics;\n        this.options.attenHarmonics = (_c = sourceOptions.attenHarmonics) !== null && _c !== void 0 ? _c : this.options.attenHarmonics;\n        this.options.lowValue = (_d = sourceOptions.lowValue) !== null && _d !== void 0 ? _d : this.options.lowValue;\n        this.options.highValue = (_e = sourceOptions.highValue) !== null && _e !== void 0 ? _e : this.options.highValue;\n    }\n    reset(particle) {\n        delete particle.pathGen;\n        delete particle.curveVelocity;\n    }\n    update() {\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}