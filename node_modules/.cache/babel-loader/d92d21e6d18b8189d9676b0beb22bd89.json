{"ast":null,"code":"import { ExternalInteractorBase } from \"../../../Core/Utils/ExternalInteractorBase\";\nexport class Pauser extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    this.handleClickMode = mode => {\n      if (mode !== \"pause\") {\n        return;\n      }\n      const container = this.container;\n      if (container.getAnimationStatus()) {\n        container.pause();\n      } else {\n        container.play();\n      }\n    };\n  }\n  isEnabled() {\n    return true;\n  }\n  reset() {}\n  async interact() {}\n}","map":{"version":3,"names":["ExternalInteractorBase","Pauser","constructor","container","handleClickMode","mode","getAnimationStatus","pause","play","isEnabled","reset","interact"],"sources":["/Users/nicolascuveillier/WebSite/portfolio/node_modules/react-tsparticles/node_modules/tsparticles/esm/Interactions/External/Pause/Pauser.js"],"sourcesContent":["import { ExternalInteractorBase } from \"../../../Core/Utils/ExternalInteractorBase\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n    async interact() {\n    }\n}\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,4CAA4C;AACnF,OAAO,MAAMC,MAAM,SAASD,sBAAsB,CAAC;EAC/CE,WAAW,CAACC,SAAS,EAAE;IACnB,KAAK,CAACA,SAAS,CAAC;IAChB,IAAI,CAACC,eAAe,GAAIC,IAAI,IAAK;MAC7B,IAAIA,IAAI,KAAK,OAAO,EAAE;QAClB;MACJ;MACA,MAAMF,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,IAAIA,SAAS,CAACG,kBAAkB,EAAE,EAAE;QAChCH,SAAS,CAACI,KAAK,EAAE;MACrB,CAAC,MACI;QACDJ,SAAS,CAACK,IAAI,EAAE;MACpB;IACJ,CAAC;EACL;EACAC,SAAS,GAAG;IACR,OAAO,IAAI;EACf;EACAC,KAAK,GAAG,CACR;EACA,MAAMC,QAAQ,GAAG,CACjB;AACJ"},"metadata":{},"sourceType":"module"}