{"ast":null,"code":"import _slicedToArray from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { clear as _clear, drawConnectLine as _drawConnectLine, drawGrabLine as _drawGrabLine, drawParticle as _drawParticle, drawParticlePlugin as _drawParticlePlugin, drawPlugin as _drawPlugin, gradient, paintBase as _paintBase } from \"../Utils/CanvasUtils\";\nimport { colorToHsl, colorToRgb, getStyleFromHsl, getStyleFromRgb } from \"../Utils/ColorUtils\";\nimport { Constants } from \"./Utils/Constants\";\nimport { deepExtend } from \"../Utils/Utils\";\nexport var Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    _classCallCheck(this, Canvas);\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n  _createClass(Canvas, [{\n    key: \"init\",\n    value: function init() {\n      this.resize();\n      this.initStyle();\n      this.initCover();\n      this.initTrail();\n      this.initBackground();\n      this.paint();\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _a;\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n      this.generatedCanvas = canvas.dataset && Constants.generatedAttribute in canvas.dataset ? canvas.dataset[Constants.generatedAttribute] === \"true\" : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this.context = this.element.getContext(\"2d\");\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this = this;\n      var _a;\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n      this.draw(function (ctx) {\n        _clear(ctx, _this.size);\n      });\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this2 = this;\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          _clear(ctx, _this2.size);\n          _this2.paintBase(_this2.coverColorStyle);\n        } else {\n          _this2.paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this3 = this;\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail;\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n      } else {\n        this.draw(function (ctx) {\n          _clear(ctx, _this3.size);\n        });\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var container, needsRefresh, _iterator, _step, _step$value, plugin;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.element) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 2:\n                this.resize();\n                container = this.container, needsRefresh = container.updateActualOptions();\n                container.particles.setDensity();\n                _iterator = _createForOfIteratorHelper(container.plugins);\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    _step$value = _slicedToArray(_step.value, 2), plugin = _step$value[1];\n                    if (plugin.resize !== undefined) {\n                      plugin.resize();\n                    }\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n                if (!needsRefresh) {\n                  _context.next = 10;\n                  break;\n                }\n                _context.next = 10;\n                return container.refresh();\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n      return windowResize;\n    }()\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n      var container = this.container,\n        pxRatio = container.retina.pixelRatio,\n        size = container.canvas.size,\n        newSize = {\n          width: this.element.offsetWidth * pxRatio,\n          height: this.element.offsetHeight * pxRatio\n        };\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return;\n      }\n      var oldSize = Object.assign({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"drawConnectLine\",\n    value: function drawConnectLine(p1, p2) {\n      var _this4 = this;\n      this.draw(function (ctx) {\n        var _a;\n        var lineStyle = _this4.lineStyle(p1, p2);\n        if (!lineStyle) {\n          return;\n        }\n        var pos1 = p1.getPosition(),\n          pos2 = p2.getPosition();\n        _drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : _this4.container.retina.linksWidth, lineStyle, pos1, pos2);\n      });\n    }\n  }, {\n    key: \"drawGrabLine\",\n    value: function drawGrabLine(particle, lineColor, opacity, mousePos) {\n      var container = this.container;\n      this.draw(function (ctx) {\n        var _a;\n        var beginPos = particle.getPosition();\n        _drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n      });\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this5 = this;\n      var _a, _b, _c, _d, _e, _f;\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n      var radius = particle.getRadius();\n      if (radius <= 0) {\n        return;\n      }\n      var pfColor = particle.getFillColor(),\n        psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n      if (!pfColor && !psColor) {\n        return;\n      }\n      var _this$getPluginPartic = this.getPluginParticleColors(particle),\n        _this$getPluginPartic2 = _slicedToArray(_this$getPluginPartic, 2),\n        fColor = _this$getPluginPartic2[0],\n        sColor = _this$getPluginPartic2[1];\n      if (!fColor || !sColor) {\n        if (!fColor) {\n          fColor = pfColor ? pfColor : undefined;\n        }\n        if (!sColor) {\n          sColor = psColor ? psColor : undefined;\n        }\n      }\n      var options = this.container.actualOptions,\n        zIndexOptions = particle.options.zIndex,\n        zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n        opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1,\n        strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity,\n        zOpacity = opacity * zOpacityFactor,\n        zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      var colorStyles = {\n        fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n      };\n      colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n      this.draw(function (ctx) {\n        var zSizeFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n          container = _this5.container;\n        var _iterator2 = _createForOfIteratorHelper(container.particles.updaters),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var updater = _step2.value;\n            if (updater.beforeDraw) {\n              updater.beforeDraw(particle);\n            }\n            if (updater.getColorStyles) {\n              var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n                fill = _updater$getColorStyl.fill,\n                stroke = _updater$getColorStyl.stroke;\n              if (fill) {\n                colorStyles.fill = fill;\n              }\n              if (stroke) {\n                colorStyles.stroke = stroke;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        _drawParticle(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n        var _iterator3 = _createForOfIteratorHelper(container.particles.updaters),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _updater = _step3.value;\n            if (_updater.afterDraw) {\n              _updater.afterDraw(particle);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        _drawPlugin(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        _drawParticlePlugin(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n        background = options.background,\n        element = this.element,\n        elementStyle = element === null || element === void 0 ? void 0 : element.style;\n      if (!elementStyle) {\n        return;\n      }\n      if (background.color) {\n        var color = colorToRgb(background.color);\n        elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!this.context) {\n        return;\n      }\n      return cb(this.context);\n    }\n  }, {\n    key: \"initCover\",\n    value: function initCover() {\n      var options = this.container.actualOptions,\n        cover = options.backgroundMask.cover,\n        color = cover.color,\n        coverRgb = colorToRgb(color);\n      if (coverRgb) {\n        var coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n        this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    }\n  }, {\n    key: \"initTrail\",\n    value: function initTrail() {\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail,\n        fillColor = colorToRgb(trail.fillColor);\n      if (fillColor) {\n        var _trail = options.particles.move.trail;\n        this.trailFillColor = {\n          r: fillColor.r,\n          g: fillColor.g,\n          b: fillColor.b,\n          a: 1 / _trail.length\n        };\n      }\n    }\n  }, {\n    key: \"getPluginParticleColors\",\n    value: function getPluginParticleColors(particle) {\n      var fColor, sColor;\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            plugin = _step4$value[1];\n          if (!fColor && plugin.particleFillColor) {\n            fColor = colorToHsl(plugin.particleFillColor(particle));\n          }\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = colorToHsl(plugin.particleStrokeColor(particle));\n          }\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"initStyle\",\n    value: function initStyle() {\n      var element = this.element,\n        options = this.container.actualOptions;\n      if (!element) {\n        return;\n      }\n      var originalStyle = this.originalStyle;\n      if (options.fullScreen.enable) {\n        this.originalStyle = deepExtend({}, element.style);\n        element.style.setProperty(\"position\", \"fixed\", \"important\");\n        element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n        element.style.setProperty(\"top\", \"0\", \"important\");\n        element.style.setProperty(\"left\", \"0\", \"important\");\n        element.style.setProperty(\"width\", \"100%\", \"important\");\n        element.style.setProperty(\"height\", \"100%\", \"important\");\n      } else if (originalStyle) {\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n      }\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n        var value = options.style[key];\n        if (!value) {\n          continue;\n        }\n        element.style.setProperty(key, value, \"important\");\n      }\n    }\n  }, {\n    key: \"paintBase\",\n    value: function paintBase(baseColor) {\n      var _this6 = this;\n      this.draw(function (ctx) {\n        _paintBase(ctx, _this6.size, baseColor);\n      });\n    }\n  }, {\n    key: \"lineStyle\",\n    value: function lineStyle(p1, p2) {\n      var _this7 = this;\n      return this.draw(function (ctx) {\n        var options = _this7.container.actualOptions,\n          connectOptions = options.interactivity.modes.connect;\n        return gradient(ctx, p1, p2, connectOptions.links.opacity);\n      });\n    }\n  }]);\n  return Canvas;\n}();","map":{"version":3,"names":["clear","drawConnectLine","drawGrabLine","drawParticle","drawParticlePlugin","drawPlugin","gradient","paintBase","colorToHsl","colorToRgb","getStyleFromHsl","getStyleFromRgb","Constants","deepExtend","Canvas","container","size","height","width","context","generatedCanvas","resize","initStyle","initCover","initTrail","initBackground","paint","canvas","_a","element","remove","dataset","generatedAttribute","originalStyle","style","offsetHeight","offsetWidth","getContext","retina","init","draw","ctx","options","actualOptions","backgroundMask","enable","cover","coverColorStyle","trail","particles","move","length","trailFillColor","needsRefresh","updateActualOptions","setDensity","plugins","plugin","undefined","refresh","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","p1","p2","lineStyle","pos1","getPosition","pos2","linksWidth","particle","lineColor","opacity","mousePos","beginPos","delta","_b","_c","_d","_e","_f","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","getPluginParticleColors","fColor","sColor","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","bubble","value","strokeOpacity","stroke","zOpacity","zStrokeOpacity","colorStyles","fill","zSizeFactor","sizeRate","updaters","updater","beforeDraw","getColorStyles","composite","shadow","afterDraw","background","elementStyle","color","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","cb","coverRgb","coverColor","r","g","b","a","fillColor","particleFillColor","particleStrokeColor","fullScreen","setProperty","toString","top","left","key","baseColor","connectOptions","interactivity","modes","connect","links"],"sources":["/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/react-tsparticles/node_modules/tsparticles/esm/Core/Canvas.js"],"sourcesContent":["import { clear, drawConnectLine, drawGrabLine, drawParticle, drawParticlePlugin, drawPlugin, gradient, paintBase, } from \"../Utils/CanvasUtils\";\nimport { colorToHsl, colorToRgb, getStyleFromHsl, getStyleFromRgb } from \"../Utils/ColorUtils\";\nimport { Constants } from \"./Utils/Constants\";\nimport { deepExtend } from \"../Utils/Utils\";\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && Constants.generatedAttribute in canvas.dataset\n                ? canvas.dataset[Constants.generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.draw((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.draw((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor || !sColor) {\n            if (!fColor) {\n                fColor = pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1, strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        const colorStyles = {\n            fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n        };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n        this.draw((ctx) => {\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate, container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n            }\n            drawParticle(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = colorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = colorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = colorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = colorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = colorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = deepExtend({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.draw((ctx) => {\n            const options = this.container.actualOptions, connectOptions = options.interactivity.modes.connect;\n            return gradient(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}