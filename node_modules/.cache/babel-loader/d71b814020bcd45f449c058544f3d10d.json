{"ast":null,"code":"import _asyncToGenerator from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { calcEasing, clamp, getDistances } from \"../../../Utils/NumberUtils\";\nimport { Circle } from \"../../../Core/Utils/Circle\";\nimport { Constants } from \"../../../Core/Utils/Constants\";\nimport { ExternalInteractorBase } from \"../../../Core/Utils/ExternalInteractorBase\";\nimport { Vector } from \"../../../Core/Utils/Vector\";\nimport { isInArray } from \"../../../Utils/Utils\";\nexport var Attractor = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Attractor, _ExternalInteractorBa);\n  var _super = _createSuper(Attractor);\n  function Attractor(container) {\n    var _this;\n    _classCallCheck(this, Attractor);\n    _this = _super.call(this, container);\n    if (!container.attract) {\n      container.attract = {\n        particles: []\n      };\n    }\n    _this.handleClickMode = function (mode) {\n      var options = _this.container.actualOptions;\n      if (mode !== \"attract\") {\n        return;\n      }\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n      container.attract.clicking = true;\n      container.attract.count = 0;\n      var _iterator = _createForOfIteratorHelper(container.attract.particles),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      container.attract.particles = [];\n      container.attract.finish = false;\n      setTimeout(function () {\n        if (!container.destroyed) {\n          if (!container.attract) {\n            container.attract = {\n              particles: []\n            };\n          }\n          container.attract.clicking = false;\n        }\n      }, options.interactivity.modes.attract.duration * 1000);\n    };\n    return _this;\n  }\n  _createClass(Attractor, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n        options = container.actualOptions,\n        mouse = container.interactivity.mouse,\n        events = options.interactivity.events;\n      if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n        return false;\n      }\n      var hoverMode = events.onHover.mode,\n        clickMode = events.onClick.mode;\n      return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var container, options, mouseMoveStatus, events, hoverEnabled, hoverMode, clickEnabled, clickMode;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n                if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n                  this.hoverAttract();\n                } else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n                  this.clickAttract();\n                }\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n      return interact;\n    }()\n  }, {\n    key: \"hoverAttract\",\n    value: function hoverAttract() {\n      var container = this.container;\n      var mousePos = container.interactivity.mouse.position;\n      if (!mousePos) {\n        return;\n      }\n      var attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n  }, {\n    key: \"processAttract\",\n    value: function processAttract(position, attractRadius, area) {\n      var container = this.container;\n      var attractOptions = container.actualOptions.interactivity.modes.attract;\n      var query = container.particles.quadTree.query(area);\n      var _iterator2 = _createForOfIteratorHelper(query),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n          var _getDistances = getDistances(particle.position, position),\n            dx = _getDistances.dx,\n            dy = _getDistances.dy,\n            distance = _getDistances.distance;\n          var velocity = attractOptions.speed * attractOptions.factor;\n          var attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n          var normVec = Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n          particle.position.subFrom(normVec);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"clickAttract\",\n    value: function clickAttract() {\n      var container = this.container;\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n      if (!container.attract.finish) {\n        if (!container.attract.count) {\n          container.attract.count = 0;\n        }\n        container.attract.count++;\n        if (container.attract.count === container.particles.count) {\n          container.attract.finish = true;\n        }\n      }\n      if (container.attract.clicking) {\n        var mousePos = container.interactivity.mouse.clickPosition;\n        if (!mousePos) {\n          return;\n        }\n        var attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n      } else if (container.attract.clicking === false) {\n        container.attract.particles = [];\n      }\n      return;\n    }\n  }]);\n  return Attractor;\n}(ExternalInteractorBase);","map":{"version":3,"names":["calcEasing","clamp","getDistances","Circle","Constants","ExternalInteractorBase","Vector","isInArray","Attractor","container","attract","particles","handleClickMode","mode","options","actualOptions","clicking","count","particle","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","interactivity","modes","duration","mouse","events","position","onHover","enable","clickPosition","onClick","hoverMode","clickMode","mouseMoveStatus","status","mouseMoveEvent","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","x","y","area","attractOptions","query","quadTree","dx","dy","distance","speed","factor","attractFactor","easing","maxSpeed","normVec","create","subFrom"],"sources":["/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/react-tsparticles/node_modules/tsparticles/esm/Interactions/External/Attract/Attractor.js"],"sourcesContent":["import { calcEasing, clamp, getDistances } from \"../../../Utils/NumberUtils\";\nimport { Circle } from \"../../../Core/Utils/Circle\";\nimport { Constants } from \"../../../Core/Utils/Constants\";\nimport { ExternalInteractorBase } from \"../../../Core/Utils/ExternalInteractorBase\";\nimport { Vector } from \"../../../Core/Utils/Vector\";\nimport { isInArray } from \"../../../Utils/Utils\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions;\n            if (mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, options.interactivity.modes.attract.duration * 1000);\n        };\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}