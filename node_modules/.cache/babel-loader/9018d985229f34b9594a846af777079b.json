{"ast":null,"code":"import _asyncToGenerator from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nimport { calcPositionFromSize, getRangeMax, getRangeMin, getRangeValue, randomInRange, setRangeValue } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n    this.container = container;\n    _Particles_engine.set(this, void 0);\n    __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n    this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n    var canvasSize = this.container.canvas.size;\n    this.linksColors = new Map();\n    this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n    this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n  }\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n      var container = this.container,\n        options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      this.freqs.links = new Map();\n      this.freqs.triangles = new Map();\n      var handled = false;\n      this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            plugin = _step$value[1];\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.addManualParticles();\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n      container.pathGenerator.init(container);\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.clear();\n                this.init();\n                _context.next = 4;\n                return this.draw({\n                  value: 0,\n                  factor: 0\n                });\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n      return redraw;\n    }()\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n      if (!(index >= 0 && index <= this.count)) {\n        return;\n      }\n      var deleted = 0;\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        deleted++;\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(delta) {\n        var container, particlesToDelete, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, _particle, resizeFactor, _iterator5, _step5, _step5$value, _plugin, _iterator6, _step6, mover, _i2, _particlesToDelete, particle, _iterator4, _step4, _particle2, _iterator7, _step7, updater;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                container = this.container, particlesToDelete = [];\n                container.pathGenerator.update();\n                _iterator2 = _createForOfIteratorHelper(container.plugins);\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n                    if (plugin.update !== undefined) {\n                      plugin.update(delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n                _iterator3 = _createForOfIteratorHelper(this.array);\n                _context2.prev = 5;\n                _iterator3.s();\n              case 7:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context2.next = 39;\n                  break;\n                }\n                _particle = _step3.value;\n                resizeFactor = container.canvas.resizeFactor;\n                if (resizeFactor && !_particle.ignoresResizeRatio) {\n                  _particle.position.x *= resizeFactor.width;\n                  _particle.position.y *= resizeFactor.height;\n                }\n                _particle.ignoresResizeRatio = false;\n                _particle.bubble.inRange = false;\n                _iterator5 = _createForOfIteratorHelper(this.container.plugins);\n                _context2.prev = 14;\n                _iterator5.s();\n              case 16:\n                if ((_step5 = _iterator5.n()).done) {\n                  _context2.next = 23;\n                  break;\n                }\n                _step5$value = _slicedToArray(_step5.value, 2), _plugin = _step5$value[1];\n                if (!_particle.destroyed) {\n                  _context2.next = 20;\n                  break;\n                }\n                return _context2.abrupt(\"break\", 23);\n              case 20:\n                if (_plugin.particleUpdate) {\n                  _plugin.particleUpdate(_particle, delta);\n                }\n              case 21:\n                _context2.next = 16;\n                break;\n              case 23:\n                _context2.next = 28;\n                break;\n              case 25:\n                _context2.prev = 25;\n                _context2.t0 = _context2[\"catch\"](14);\n                _iterator5.e(_context2.t0);\n              case 28:\n                _context2.prev = 28;\n                _iterator5.f();\n                return _context2.finish(28);\n              case 31:\n                _iterator6 = _createForOfIteratorHelper(this.movers);\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    mover = _step6.value;\n                    if (mover.isEnabled(_particle)) {\n                      mover.move(_particle, delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n                if (!_particle.destroyed) {\n                  _context2.next = 36;\n                  break;\n                }\n                particlesToDelete.push(_particle);\n                return _context2.abrupt(\"continue\", 37);\n              case 36:\n                this.quadTree.insert(new Point(_particle.getPosition(), _particle));\n              case 37:\n                _context2.next = 7;\n                break;\n              case 39:\n                _context2.next = 44;\n                break;\n              case 41:\n                _context2.prev = 41;\n                _context2.t1 = _context2[\"catch\"](5);\n                _iterator3.e(_context2.t1);\n              case 44:\n                _context2.prev = 44;\n                _iterator3.f();\n                return _context2.finish(44);\n              case 47:\n                for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                  particle = _particlesToDelete[_i2];\n                  this.remove(particle);\n                }\n                _context2.next = 50;\n                return this.interactionManager.externalInteract(delta);\n              case 50:\n                _iterator4 = _createForOfIteratorHelper(container.particles.array);\n                _context2.prev = 51;\n                _iterator4.s();\n              case 53:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context2.next = 62;\n                  break;\n                }\n                _particle2 = _step4.value;\n                _iterator7 = _createForOfIteratorHelper(this.updaters);\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    updater = _step7.value;\n                    updater.update(_particle2, delta);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n                if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                  _context2.next = 60;\n                  break;\n                }\n                _context2.next = 60;\n                return this.interactionManager.particlesInteract(_particle2, delta);\n              case 60:\n                _context2.next = 53;\n                break;\n              case 62:\n                _context2.next = 67;\n                break;\n              case 64:\n                _context2.prev = 64;\n                _context2.t2 = _context2[\"catch\"](51);\n                _iterator4.e(_context2.t2);\n              case 67:\n                _context2.prev = 67;\n                _iterator4.f();\n                return _context2.finish(67);\n              case 70:\n                delete container.canvas.resizeFactor;\n              case 71:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 41, 44, 47], [14, 25, 28, 31], [51, 64, 67, 70]]);\n      }));\n      function update(_x) {\n        return _update.apply(this, arguments);\n      }\n      return update;\n    }()\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(delta) {\n        var container, canvasSize, _iterator8, _step8, _step8$value, plugin, _iterator9, _step9, p;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                container = this.container, canvasSize = this.container.canvas.size;\n                this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n                container.canvas.clear();\n                _context3.next = 5;\n                return this.update(delta);\n              case 5:\n                if (this.needsSort) {\n                  this.zArray.sort(function (a, b) {\n                    return b.position.z - a.position.z || a.id - b.id;\n                  });\n                  this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                  this.needsSort = false;\n                }\n                _iterator8 = _createForOfIteratorHelper(container.plugins);\n                try {\n                  for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                    _step8$value = _slicedToArray(_step8.value, 2), plugin = _step8$value[1];\n                    container.canvas.drawPlugin(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator8.e(err);\n                } finally {\n                  _iterator8.f();\n                }\n                _iterator9 = _createForOfIteratorHelper(this.zArray);\n                try {\n                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                    p = _step9.value;\n                    p.draw(delta);\n                  }\n                } catch (err) {\n                  _iterator9.e(err);\n                } finally {\n                  _iterator9.f();\n                }\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function draw(_x2) {\n        return _draw.apply(this, arguments);\n      }\n      return draw;\n    }()\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n      this.pushing = false;\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group) {\n      var container = this.container,\n        options = container.actualOptions,\n        limit = options.particles.number.limit * container.density;\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n      return this.pushParticle(position, overrideOptions, group);\n    }\n  }, {\n    key: \"addSplitParticle\",\n    value: function addSplitParticle(parent) {\n      var splitOptions = parent.options.destroy.split,\n        options = new ParticlesOptions();\n      options.load(parent.options);\n      var factor = getRangeValue(splitOptions.factor.value);\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n      if (typeof options.size.value === \"number\") {\n        options.size.value /= factor;\n      } else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n      }\n      options.load(splitOptions.particles);\n      var offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0,\n        position = {\n          x: parent.position.x + randomInRange(offset),\n          y: parent.position.y + randomInRange(offset)\n        };\n      return this.pushParticle(position, options, parent.group, function (particle) {\n        if (particle.size.value < 0.5) {\n          return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = parent.splitCount + 1;\n        particle.unbreakable = true;\n        setTimeout(function () {\n          particle.unbreakable = false;\n        }, 500);\n        return true;\n      });\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      var range = setRangeValue(p1.id, p2.id),\n        key = \"\".concat(getRangeMin(range), \"_\").concat(getRangeMax(range));\n      var res = this.freqs.links.get(key);\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.links.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      var _ref = [p1.id, p2.id, p3.id],\n        id1 = _ref[0],\n        id2 = _ref[1],\n        id3 = _ref[2];\n      if (id1 > id2) {\n        var _ref2 = [id1, id2];\n        id2 = _ref2[0];\n        id1 = _ref2[1];\n      }\n      if (id2 > id3) {\n        var _ref3 = [id2, id3];\n        id3 = _ref3[0];\n        id2 = _ref3[1];\n      }\n      if (id1 > id3) {\n        var _ref4 = [id1, id3];\n        id3 = _ref4[0];\n        id1 = _ref4[1];\n      }\n      var key = \"\".concat(id1, \"_\").concat(id2, \"_\").concat(id3);\n      var res = this.freqs.triangles.get(key);\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.triangles.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n        options = container.actualOptions;\n      var _iterator10 = _createForOfIteratorHelper(options.manualParticles),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var particle = _step10.value;\n          this.addParticle(calcPositionFromSize({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n      for (var group in options.particles.groups) {\n        this.applyDensity(options.particles.groups[group], 0, group);\n      }\n      this.applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"applyDensity\",\n    value: function applyDensity(options, manualCount, group) {\n      var _a;\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n      var numberOptions = options.number,\n        densityFactor = this.initDensityFactor(numberOptions.density),\n        optParticlesNumber = numberOptions.value,\n        optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n        particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n        particlesCount = Math.min(this.count, this.array.filter(function (t) {\n          return t.group === group;\n        }).length);\n      this.limit = numberOptions.limit * densityFactor;\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor(densityOptions) {\n      var container = this.container;\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n      var canvas = container.canvas.element,\n        pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"pushParticle\",\n    value: function pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n        var canAdd = true;\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n        if (!canAdd) {\n          return;\n        }\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n  return Particles;\n}();\n_Particles_engine = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particles_engine","calcPositionFromSize","getRangeMax","getRangeMin","getRangeValue","randomInRange","setRangeValue","InteractionManager","Particle","ParticlesOptions","Point","QuadTree","Rectangle","Particles","engine","container","nextId","array","zArray","limit","needsSort","lastZIndex","freqs","links","Map","triangles","interactionManager","canvasSize","canvas","size","linksColors","quadTree","width","height","movers","plugins","getMovers","updaters","getUpdaters","length","_a","options","actualOptions","handled","init","plugin","particlesInitialization","undefined","addManualParticles","group","particles","groups","groupOptions","i","count","j","number","addParticle","pathGenerator","clear","draw","factor","index","quantity","override","deleted","particle","destroy","splice","zIdx","indexOf","removeAt","delta","particlesToDelete","update","resizeFactor","ignoresResizeRatio","position","x","y","bubble","inRange","destroyed","particleUpdate","mover","isEnabled","move","push","insert","getPosition","remove","externalInteract","updater","spawning","particlesInteract","sort","a","b","z","id","drawPlugin","p","nb","mouse","overrideOptions","pushing","density","countToRemove","removeQuantity","pushParticle","parent","splitOptions","split","load","color","hsl","getFillColor","min","max","offset","sizeOffset","velocity","splitCount","unbreakable","setTimeout","p1","p2","range","key","res","Math","random","p3","id1","id2","id3","manualParticles","applyDensity","mode","handleClickMode","manualCount","enable","numberOptions","densityFactor","initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","area","initializer","canAdd","e","console","warn","WeakMap"],"sources":["/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/react-tsparticles/node_modules/tsparticles/esm/Core/Particles.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nimport { calcPositionFromSize, getRangeMax, getRangeMin, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        _Particles_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        container.pathGenerator.init(container);\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n        }\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    async update(delta) {\n        const container = this.container, particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            particle.bubble.inRange = false;\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions, group) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit * container.density;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions, group);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split, options = new ParticlesOptions();\n        options.load(parent.options);\n        const factor = getRangeValue(splitOptions.factor.value);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.pushParticle(position, options, parent.group, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    getLinkFrequency(p1, p2) {\n        const range = setRangeValue(p1.id, p2.id), key = `${getRangeMin(range)}_${getRangeMax(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this.applyDensity(options.particles.groups[group], 0, group);\n        }\n        this.applyDensity(options.particles, options.manualParticles.length);\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this.initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n_Particles_engine = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}