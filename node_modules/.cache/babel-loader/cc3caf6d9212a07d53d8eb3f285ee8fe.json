{"ast":null,"code":"function ___$insertStyle(css) {\n  if (!css || typeof window === 'undefined') {\n    return;\n  }\n  const style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n  return css;\n}\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar React = require('react');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar halfScreenHeight;\nif (typeof window !== \"undefined\") {\n  halfScreenHeight = (window === null || window === void 0 ? void 0 : window.innerHeight) / 2;\n}\nvar options = {\n  root: null,\n  rootMargin: \"0px\",\n  threshold: 0.2\n};\nfunction setObservable(_a) {\n  var _b;\n  var obs = _a.obs,\n    observableList = _a.observableList,\n    callbacks = _a.callbacks;\n  var obsId = (_b = obs === null || obs === void 0 ? void 0 : obs.target) === null || _b === void 0 ? void 0 : _b.id;\n  if (!observableList.has(obsId)) {\n    observableList.set(obsId, {\n      observable: obs,\n      isPassed: false,\n      callbackFn: callbacks[obsId] || null\n    });\n  }\n}\nfunction removeObservable(_a) {\n  var _b;\n  var obs = _a.obs,\n    observableList = _a.observableList;\n  var obsName = (_b = obs === null || obs === void 0 ? void 0 : obs.target) === null || _b === void 0 ? void 0 : _b.id;\n  if (observableList.has(obsName)) {\n    observableList.set(obsName, __assign(__assign({}, observableList.get(obsName)), {\n      isPassed: true\n    }));\n  }\n}\nfunction colorize(_a) {\n  var observableList = _a.observableList,\n    initialColor = _a.initialColor,\n    fillColor = _a.fillColor,\n    hasReverse = _a.hasReverse;\n  observableList.forEach(function (observable) {\n    if (!observable.isPassed) {\n      var rect = observable.observable.target.getBoundingClientRect();\n      var entry = observable === null || observable === void 0 ? void 0 : observable.observable;\n      if (rect.bottom > halfScreenHeight && rect.top < halfScreenHeight) {\n        if (initialColor && fillColor) {\n          var depthPx = rect.bottom - halfScreenHeight;\n          var depthPercent = depthPx * 100 / rect.height;\n          entry.target.style.background = \"linear-gradient(to top, \".concat(initialColor, \" \").concat(depthPercent, \"%, \").concat(fillColor, \" \").concat(depthPercent, \"% 100%)\");\n          entry.target.style.transform = \"translateZ(0)\";\n        }\n      }\n      if (rect.bottom < halfScreenHeight) {\n        if (initialColor && fillColor) {\n          entry.target.style.background = fillColor;\n          entry.target.style.transform = \"unset\";\n        }\n        if (observable === null || observable === void 0 ? void 0 : observable.callbackFn) {\n          if (!(observable === null || observable === void 0 ? void 0 : observable.callbackFired)) {\n            observable === null || observable === void 0 ? void 0 : observable.callbackFn();\n            observable.callbackFired = true;\n          }\n        }\n        if (!hasReverse) {\n          removeObservable({\n            obs: entry,\n            observableList: observableList\n          });\n        }\n      }\n      if (rect.top > halfScreenHeight && hasReverse) {\n        entry.target.style.background = initialColor;\n      }\n    }\n  });\n}\nvar TimelineObserver = function (_a) {\n  var handleObserve = _a.handleObserve,\n    initialColor = _a.initialColor,\n    fillColor = _a.fillColor,\n    hasReverse = _a.hasReverse;\n  var observablesStore = React.useRef(new Map());\n  var callbacks = React.useRef({});\n  var callback = function (entries) {\n    entries === null || entries === void 0 ? void 0 : entries.forEach(function (entry) {\n      if (entry.isIntersecting) {\n        setObservable({\n          obs: entry,\n          observableList: observablesStore.current,\n          callbacks: callbacks.current\n        });\n      }\n    });\n  };\n  var observer = React.useRef(new IntersectionObserver(callback, options));\n  var animation = function () {\n    window.requestAnimationFrame(function () {\n      colorize({\n        observableList: observablesStore.current,\n        initialColor: initialColor,\n        fillColor: fillColor,\n        hasReverse: hasReverse\n      });\n    });\n  };\n  React.useEffect(function () {\n    document.addEventListener(\"scroll\", animation);\n    return function () {\n      document.removeEventListener(\"scroll\", animation);\n    };\n  }, []);\n  var setObserver = function (elem, callbackFn) {\n    var elemId = elem === null || elem === void 0 ? void 0 : elem.id;\n    if (initialColor) {\n      elem.style.background = initialColor;\n    }\n    observer.current.observe(elem);\n    if (elemId && callbackFn) {\n      callbacks.current[elemId] = callbackFn;\n    }\n  };\n  return React__default[\"default\"].createElement(\"div\", null, handleObserve ? handleObserve(setObserver) : null);\n};\nexports[\"default\"] = TimelineObserver;","map":null,"metadata":{},"sourceType":"script"}