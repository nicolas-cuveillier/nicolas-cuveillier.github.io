{"ast":null,"code":"import _asyncToGenerator from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { calcEasing, clamp, getDistances } from \"../../../Utils/NumberUtils\";\nimport { divMode, divModeExecute, isDivModeEnabled, isInArray } from \"../../../Utils/Utils\";\nimport { Circle } from \"../../../Core/Utils/Circle\";\nimport { Constants } from \"../../../Core/Utils/Constants\";\nimport { ExternalInteractorBase } from \"../../../Core/Utils/ExternalInteractorBase\";\nimport { Rectangle } from \"../../../Core/Utils/Rectangle\";\nimport { Vector } from \"../../../Core/Utils/Vector\";\nexport var Repulser = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Repulser, _ExternalInteractorBa);\n  var _super = _createSuper(Repulser);\n  function Repulser(container) {\n    var _this;\n    _classCallCheck(this, Repulser);\n    _this = _super.call(this, container);\n    if (!container.repulse) {\n      container.repulse = {\n        particles: []\n      };\n    }\n    _this.handleClickMode = function (mode) {\n      var options = _this.container.actualOptions;\n      if (mode !== \"repulse\") {\n        return;\n      }\n      if (!container.repulse) {\n        container.repulse = {\n          particles: []\n        };\n      }\n      container.repulse.clicking = true;\n      container.repulse.count = 0;\n      var _iterator = _createForOfIteratorHelper(container.repulse.particles),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      container.repulse.particles = [];\n      container.repulse.finish = false;\n      setTimeout(function () {\n        if (!container.destroyed) {\n          if (!container.repulse) {\n            container.repulse = {\n              particles: []\n            };\n          }\n          container.repulse.clicking = false;\n        }\n      }, options.interactivity.modes.repulse.duration * 1000);\n    };\n    return _this;\n  }\n  _createClass(Repulser, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n        options = container.actualOptions,\n        mouse = container.interactivity.mouse,\n        events = options.interactivity.events,\n        divs = events.onDiv,\n        divRepulse = isDivModeEnabled(\"repulse\", divs);\n      if (!(divRepulse || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n      var hoverMode = events.onHover.mode,\n        clickMode = events.onClick.mode;\n      return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n        var container, options, mouseMoveStatus, events, hoverEnabled, hoverMode, clickEnabled, clickMode, divs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n                if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n                  this.hoverRepulse();\n                } else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n                  this.clickRepulse();\n                } else {\n                  divModeExecute(\"repulse\", divs, function (selector, div) {\n                    return _this2.singleSelectorRepulse(selector, div);\n                  });\n                }\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n      return interact;\n    }()\n  }, {\n    key: \"singleSelectorRepulse\",\n    value: function singleSelectorRepulse(selector, div) {\n      var _this3 = this;\n      var container = this.container,\n        query = document.querySelectorAll(selector);\n      if (!query.length) {\n        return;\n      }\n      query.forEach(function (item) {\n        var elem = item,\n          pxRatio = container.retina.pixelRatio,\n          pos = {\n            x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n          },\n          repulseRadius = elem.offsetWidth / 2 * pxRatio,\n          area = div.type === \"circle\" ? new Circle(pos.x, pos.y, repulseRadius) : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n          divs = container.actualOptions.interactivity.modes.repulse.divs,\n          divRepulse = divMode(divs, elem);\n        _this3.processRepulse(pos, repulseRadius, area, divRepulse);\n      });\n    }\n  }, {\n    key: \"hoverRepulse\",\n    value: function hoverRepulse() {\n      var container = this.container,\n        mousePos = container.interactivity.mouse.position;\n      if (!mousePos) {\n        return;\n      }\n      var repulseRadius = container.retina.repulseModeDistance;\n      this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n  }, {\n    key: \"processRepulse\",\n    value: function processRepulse(position, repulseRadius, area, divRepulse) {\n      var _a;\n      var container = this.container,\n        query = container.particles.quadTree.query(area),\n        repulseOptions = container.actualOptions.interactivity.modes.repulse;\n      var _iterator2 = _createForOfIteratorHelper(query),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n          var _getDistances = getDistances(particle.position, position),\n            dx = _getDistances.dx,\n            dy = _getDistances.dy,\n            distance = _getDistances.distance,\n            velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor,\n            repulseFactor = clamp(calcEasing(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed),\n            normVec = Vector.create(distance === 0 ? velocity : dx / distance * repulseFactor, distance === 0 ? velocity : dy / distance * repulseFactor);\n          particle.position.addTo(normVec);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"clickRepulse\",\n    value: function clickRepulse() {\n      var container = this.container;\n      if (!container.repulse) {\n        container.repulse = {\n          particles: []\n        };\n      }\n      if (!container.repulse.finish) {\n        if (!container.repulse.count) {\n          container.repulse.count = 0;\n        }\n        container.repulse.count++;\n        if (container.repulse.count === container.particles.count) {\n          container.repulse.finish = true;\n        }\n      }\n      if (container.repulse.clicking) {\n        var repulseDistance = container.retina.repulseModeDistance,\n          repulseRadius = Math.pow(repulseDistance / 6, 3),\n          mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (mouseClickPos === undefined) {\n          return;\n        }\n        var range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius),\n          query = container.particles.quadTree.query(range);\n        var _iterator3 = _createForOfIteratorHelper(query),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var particle = _step3.value;\n            var _getDistances2 = getDistances(mouseClickPos, particle.position),\n              dx = _getDistances2.dx,\n              dy = _getDistances2.dy,\n              distance = _getDistances2.distance,\n              d = Math.pow(distance, 2),\n              velocity = container.actualOptions.interactivity.modes.repulse.speed,\n              force = -repulseRadius * velocity / d;\n            if (d <= repulseRadius) {\n              container.repulse.particles.push(particle);\n              var vect = Vector.create(dx, dy);\n              vect.length = force;\n              particle.velocity.setTo(vect);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } else if (container.repulse.clicking === false) {\n        var _iterator4 = _createForOfIteratorHelper(container.repulse.particles),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _particle = _step4.value;\n            _particle.velocity.setTo(_particle.initialVelocity);\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n        container.repulse.particles = [];\n      }\n    }\n  }]);\n  return Repulser;\n}(ExternalInteractorBase);","map":{"version":3,"names":["calcEasing","clamp","getDistances","divMode","divModeExecute","isDivModeEnabled","isInArray","Circle","Constants","ExternalInteractorBase","Rectangle","Vector","Repulser","container","repulse","particles","handleClickMode","mode","options","actualOptions","clicking","count","particle","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","interactivity","modes","duration","mouse","events","divs","onDiv","divRepulse","onHover","enable","position","onClick","clickPosition","hoverMode","clickMode","mouseMoveStatus","status","mouseMoveEvent","hoverEnabled","clickEnabled","hoverRepulse","clickRepulse","selector","div","singleSelectorRepulse","query","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","processRepulse","mousePos","repulseModeDistance","_a","quadTree","repulseOptions","dx","dy","distance","speed","factor","repulseFactor","easing","maxSpeed","normVec","create","addTo","repulseDistance","Math","pow","mouseClickPos","undefined","range","d","force","push","vect"],"sources":["/Users/nicolascuveillier/WebSite/nicolas-cuveillier.github.io/node_modules/react-tsparticles/node_modules/tsparticles/esm/Interactions/External/Repulse/Repulser.js"],"sourcesContent":["import { calcEasing, clamp, getDistances } from \"../../../Utils/NumberUtils\";\nimport { divMode, divModeExecute, isDivModeEnabled, isInArray } from \"../../../Utils/Utils\";\nimport { Circle } from \"../../../Core/Utils/Circle\";\nimport { Constants } from \"../../../Core/Utils/Constants\";\nimport { ExternalInteractorBase } from \"../../../Core/Utils/ExternalInteractorBase\";\nimport { Rectangle } from \"../../../Core/Utils/Rectangle\";\nimport { Vector } from \"../../../Core/Utils/Vector\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions;\n            if (mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, options.interactivity.modes.repulse.duration * 1000);\n        };\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = container.actualOptions.interactivity.modes.repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(calcEasing(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance, repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range);\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = container.actualOptions.interactivity.modes.repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}